sudo: enabled
language: c

branches:
  only:
  - master

notifications:
  email:
    on_success: never

# Do not error on failures in OSX, which is not the target system
matrix:
  allow_failures:
    - os: osx

# Follow DynamoRIO's lead and use a jobs approach over os, compiler, env matrix
jobs:
  include:

    # 64-bit Linux builds with gcc and clang
    - stage: amd64
      os: linux
      dist: xenial
      compiler: gcc
    - stage: amd64
      os: linux
      dist: xenial
      compiler: clang
    - stage: amd64
      os: linux
      dist: xenial
      compiler: gcc
      env: LDFLAGS="-static"
    - stage: amd64
      os: linux
      dist: xenial
      compiler: clang
      env: LDFLAGS="-static"
    
    # 32-bit Linux builds with gcc
    - stage: i386
      os: linux
      dist: xenial
      compiler: gcc
      install:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update
        - sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1
        - sudo apt-get install gcc-multilib
      env: LDFLAGS="-m32" CFLAGS="-m32"
    - stage: i386
      os: linux
      dist: xenial
      compiler: gcc
      install:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update
        - sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1
        - sudo apt-get install gcc-multilib
      env: LDFLAGS="-m32 -static" CFLAGS="-m32"
    
    # ARM architecture build with gcc
    - stage: arm
      os: linux
      dist: bionic
      compiler: gcc
      install:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update
        - sudo apt-get install build-essential binutils-multiarch libc6-dev:i386 gcc-arm-linux-gnueabihf gcc-7-multilib gcc-7-multilib-arm-linux-gnueabihf
      env: CC="arm-linux-gnueabihf-gcc" CFLAGS="-m32 -march=armv7" CC_host="gcc -m32"
    - stage: arm
      os: linux
      dist: bionic
      compiler: gcc
      install:
        - sudo dpkg --add-architecture i386
        - sudo apt-get update
        - sudo apt-get install build-essential binutils-multiarch libc6-dev:i386 gcc-arm-linux-gnueabihf gcc-7-multilib gcc-7-multilib-arm-linux-gnueabihf
      env: CC="arm-linux-gnueabihf-gcc" CFLAGS="-m32 -march=armv7" CC_host="gcc -m32" LDFLAGS="-static" 

    # MIPS architecture build with gcc
    - stage: mips
      os: linux
      dist: xenial
      compiler: gcc
      addons:
        apt:
          packages:
            - u-boot-tools
      install: sudo apt-get install gcc-mips-linux-gnu

    # PowerPC architecture build with gcc
    - stage: powerpc
      os: linux
      dist: xenial
      compiler: gcc
      install: sudo apt-get install gcc-powerpc-linux-gnu

    # OSX build with clang
    - stage: osx
      os: osx
      compiler: clang

script: 
  - cd ${TRAVIS_BUILD_DIR}
  - cd src
  - ./configure $CONFIGURE_PASSTHRU
  - make
  - file boa
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then objdump -f boa; fi
  - stat boa
  - sha512sum boa
